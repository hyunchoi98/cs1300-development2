{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/HSChoi/cs1300dev/development/src/App.js\";\nimport React, { Component } from \"react\";\nimport TypeFilter from \"./TypeFilter.js\";\nimport IssuerFilter from \"./IssuerFilter.js\";\nimport FeeFilter from \"./FeeFilter.js\";\nimport FilteredList from \"./FilteredList.js\";\nimport Sorter from \"./Sorter.js\";\nimport Cart from './Cart.js';\nimport './App.css';\nimport { CardTypes, Issuers, AnnualFees, SortTypes } from \"./const.js\";\nimport Grid from '@material-ui/core/Grid';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.changeType = event => {\n      let newType = event.target.value;\n      let newFilter = this.state.filter;\n      newFilter[\"type\"] = newType;\n      this.setState({\n        filter: newFilter\n      });\n    };\n\n    this.changeIssuer = event => {\n      let newIssuer = event.target.value;\n      let newFilter = this.state.filter;\n      newFilter[\"issuer\"] = newIssuer;\n      this.setState({\n        filter: newFilter\n      });\n    };\n\n    this.changeFee = event => {\n      let newFee = event.target.value;\n      let newFilter = this.state.filter;\n      newFilter[\"fee\"] = newFee;\n      this.setState({\n        filter: newFilter\n      });\n    };\n\n    this.changeSortType = event => {\n      let newSortType = event.target.value;\n      this.setState({\n        sortType: newSortType\n      });\n    };\n\n    this.addToCart = card => {\n      // openDialog = () => setDialogIsOpen(true);\n      // closeDialog = () => setDialogIsOpen(false);\n      let cart = this.state.cart;\n      let cardNames = this.state.cardNames;\n      console.log(card.name);\n      console.log(cardNames);\n\n      if (cart.filter(e => e.name === card.name).length > 0) {\n        window.alert(\"Only one of each card can be added to your cart!\");\n      } else {\n        cart.push(card);\n        cardNames.push(card.name);\n        let total = this.state.totalFee;\n        this.setState({\n          cardNames: cardNames,\n          totalFee: total,\n          cart: cart\n        });\n      }\n\n      console.log(this.state.cart);\n    };\n\n    this.removeFromCart = card => {\n      let total = this.state.totalFee;\n      let cardNames = this.state.cardNames;\n      let cart = this.state.cart;\n      total = total - card.fee;\n      delete cardNames[card.name];\n      cart = cart.filter(x => x != card);\n      this.setState({\n        totalFee: total,\n        cart: cart,\n        cardNames: cardNames\n      });\n    };\n\n    this.state = {\n      cart: [],\n      cardNames: [],\n      filter: {\n        type: CardTypes.ALL_TYPES,\n        issuer: Issuers.ALL_ISSUERS,\n        fee: AnnualFees.ALL_FEES\n      },\n      sortType: SortTypes.NAME,\n      totalFee: 0\n    }; // const [dialogIsOpen, setDialogIsOpen] = React.useState(false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 10\n        },\n        children: \"Credit Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 10\n        },\n        children: \"Find the best credit card for you!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          style: {\n            margin: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(Sorter, {\n            changeSort: this.changeSortType,\n            sortType: this.state.sortType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TypeFilter, {\n            changeType: this.changeType,\n            filter: this.state.filter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IssuerFilter, {\n            changeIssuer: this.changeIssuer,\n            filter: this.state.filter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FeeFilter, {\n            changeFee: this.changeFee,\n            filter: this.state.filter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          padding: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(FilteredList, {\n          filter: this.state.filter,\n          sortType: this.state.sortType,\n          addToCart: this.addToCart,\n          removeFromCart: this.removeFromCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Cart, {\n          cart: this.state.cart,\n          totalFee: this.state.totalFee,\n          removeFromCart: this.removeFromCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/HSChoi/cs1300dev/development/src/App.js"],"names":["React","Component","TypeFilter","IssuerFilter","FeeFilter","FilteredList","Sorter","Cart","CardTypes","Issuers","AnnualFees","SortTypes","Grid","App","constructor","changeType","event","newType","target","value","newFilter","state","filter","setState","changeIssuer","newIssuer","changeFee","newFee","changeSortType","newSortType","sortType","addToCart","card","cart","cardNames","console","log","name","e","length","window","alert","push","total","totalFee","removeFromCart","fee","x","type","ALL_TYPES","issuer","ALL_ISSUERS","ALL_FEES","NAME","render","margin","display","flexDirection","flexWrap","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport TypeFilter from \"./TypeFilter.js\";\nimport IssuerFilter from \"./IssuerFilter.js\";\nimport FeeFilter from \"./FeeFilter.js\";\nimport FilteredList from \"./FilteredList.js\";\nimport Sorter from \"./Sorter.js\";\nimport Cart from './Cart.js';\n\nimport './App.css';\nimport { CardTypes, Issuers, AnnualFees, SortTypes } from \"./const.js\";\n\nimport Grid from '@material-ui/core/Grid';\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      cart: [],\n      cardNames: [],\n      filter: {\n        type: CardTypes.ALL_TYPES,\n        issuer: Issuers.ALL_ISSUERS,\n        fee: AnnualFees.ALL_FEES,\n      },\n      sortType: SortTypes.NAME,\n      totalFee: 0,\n    };\n    // const [dialogIsOpen, setDialogIsOpen] = React.useState(false);\n  }\n\n  changeType = event => {\n    let newType = event.target.value;\n    let newFilter = this.state.filter;\n    newFilter[\"type\"] = newType;\n    this.setState({\n      filter: newFilter,\n    });\n\n  };\n\n  changeIssuer = event => {\n    let newIssuer = event.target.value;\n    let newFilter = this.state.filter;\n    newFilter[\"issuer\"] = newIssuer;\n    this.setState({\n      filter: newFilter,\n    });\n  };\n\n  changeFee = event => {\n    let newFee = event.target.value;\n    let newFilter = this.state.filter;\n    newFilter[\"fee\"] = newFee;\n    this.setState({\n      filter: newFilter,\n    });\n  };\n\n\n  changeSortType = event => {\n    let newSortType = event.target.value;\n    this.setState({\n      sortType: newSortType,\n    });\n  };\n\n\n\n\n  addToCart = card => {\n    // openDialog = () => setDialogIsOpen(true);\n    // closeDialog = () => setDialogIsOpen(false);\n\n    let cart = this.state.cart;\n    let cardNames = this.state.cardNames;\n    console.log(card.name);\n    console.log(cardNames);\n    if (cart.filter(e => e.name === card.name).length > 0) {\n      window.alert(\"Only one of each card can be added to your cart!\")\n    } else {\n      cart.push(card);\n      cardNames.push(card.name);\n      let total = this.state.totalFee;\n      this.setState({\n        cardNames: cardNames,\n        totalFee: total,\n        cart: cart,\n      });\n    }\n    console.log(this.state.cart)\n  };\n\n  removeFromCart = card => {\n    let total = this.state.totalFee;\n    let cardNames = this.state.cardNames;\n    let cart = this.state.cart;\n\n    total = total - card.fee;\n    delete cardNames[card.name];\n    cart = cart.filter((x) => x != card);\n\n    this.setState({\n      totalFee: total,\n      cart: cart,\n      cardNames: cardNames,\n    });\n  };\n\n\n  render() {\n    return (\n      <div>\n        <h1 style={{ margin: 10 }}>Credit Cards</h1>\n        <h2 style={{ margin: 10 }}>Find the best credit card for you!</h2>\n        <div id=\"filters\">\n          <Grid style={{ margin: 10 }}>\n            <Sorter changeSort={this.changeSortType} sortType={this.state.sortType}></Sorter>\n            <TypeFilter changeType={this.changeType} filter={this.state.filter}></TypeFilter>\n            <IssuerFilter changeIssuer={this.changeIssuer} filter={this.state.filter}></IssuerFilter>\n            <FeeFilter changeFee={this.changeFee} filter={this.state.filter}></FeeFilter>\n          </Grid>\n        </div>\n\n        {/* <div>\n          <OnlyOneCardDialog open={dialogIsOpen} onClose={closeDialog} />\n        </div> */}\n\n        <div style={{\n          display: 'flex', flexDirection: 'row', flexWrap: 'wrap', padding: 5,\n        }}>\n          <FilteredList\n            filter={this.state.filter}\n            sortType={this.state.sortType}\n            addToCart={this.addToCart}\n            removeFromCart={this.removeFromCart}\n          />\n\n          <Cart cart={this.state.cart}\n            totalFee={this.state.totalFee}\n            removeFromCart={this.removeFromCart}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}